#include "DHTesp.h"
#include "WiFi.h"
#include "HTTPClient.h"
#include "PubSubClient.h"
#include "Arduino_JSON.h"

//bibliotecas
DHTesp dhtSensor;
HTTPClient http;
WiFiClient espClient;
PubSubClient mqttClient(espClient);
JSONVar data;

//conexão WiFi
const char* ssid = "Wokwi-GUEST";
const char* password = "";

//pinagens
const int relayPin1 = 14;
const int relayPin2 = 23;

//http
const String url = "https://api.thingspeak.com/update?api_key=0JBJT2DZ1R3YMCAM&";

void setup() {
  Serial.begin(115200);
  Serial.println("Iniciando Setup.");

  //setup WiFi
   WiFi.begin(ssid, password);
  while( WiFi.status() != WL_CONNECTED){
    delay(1000);
    Serial.println(WiFi.status());
    Serial.println("Conectado WiFi");
  }
  Serial.println("WiFi conectado");

  //setup pinagem
  pinMode(relayPin1, OUTPUT);
  pinMode(relayPin2, OUTPUT);
  dhtSensor.setup(13, DHTesp::DHT22);

  //setup broker
  const char* server = "broker.hivemq.com";
  int port = 1883;
  const char* Client = "clientID=esp17mc#queen_pok";
  const char* topic = "educ_senai";
  mqttClient.setServer(server, port);
  mqttClient.connect(Client);
  mqttClient.subscribe(topic);
  while(!mqttClient.connected()){
    delay(1000);
    Serial.println("cliente conectado");
  }
  Serial.println("Broker conectado");
  Serial.println("finalizado setup");
}

void loop(){
  //captura de dados
  digitalWrite(relayPin1, HIGH);
  delay(1000);
  float temperatura = dhtSensor.getTemperature();
  data["temperatura"] = temperatura;
  Serial.println("Temperatura :" + String(temperatura) + "°C");
  Serial.println(".");
  digitalWrite(relayPin1, LOW);

  digitalWrite(relayPin2, HIGH);
  delay(1000);
  float humidade = dhtSensor.getHumidity();
  data["umidade"] = humidade;
  Serial.println("Humidade :" + String(humidade) + "%");
  Serial.println(".");
  digitalWrite(relayPin2, LOW);
 
  String jsonString = JSON.stringify(data);

  //htpp
  String path = url + "field1=" + String(temperatura) + "&field2=" + String(humidade);
  http.begin(path);
  delay(1000);

  //conexão broker
  boolean msg = mqttClient.publish("educ_senai", jsonString.c_str());
  if(!msg){
    Serial.println("falha no envio, conectado novamente");
  const char* server = "broker.hivemq.com";
  int port = 1883;
  const char* Client = "clientID=esp17mc#queen_pok";
  const char* topic = "educ_senai";
  mqttClient.setServer(server, port);
  mqttClient.connect(Client);
  mqttClient.subscribe(topic);
  while(!mqttClient.connected()){
    delay(1000);
  }
  Serial.println("broker conectado");

}
  delay(2000);
}
